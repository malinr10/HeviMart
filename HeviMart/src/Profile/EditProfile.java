/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Profile;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import util.UserSession;
import util.koneksi;
import java.sql.SQLException;
import javax.swing.JFrame;

/**
 *
 * @author User
 */
public class EditProfile extends javax.swing.JFrame {

    private int id_pengguna;

    /**
     * Creates new form EditProfile
     */
    public EditProfile() {

        // 1. Panggil initComponents() pertama kali
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Edit Profil Pengguna");

        // 2. Ambil data dari UserSession
        UserSession session = UserSession.getInstance();
        this.id_pengguna = session.getIdPengguna(); // Simpan ID pengguna

        // 3. Pastikan role tidak bisa diubah oleh pengguna
        txtRole.setEnabled(false);

        // 4. Muat data profil pengguna yang sedang login
        loadProfileData();
    }

    public void loadProfileData() {
        String sql = "SELECT * FROM pengguna WHERE id_pengguna = ?";
        try (Connection conn = koneksi.getKoneksi(); PreparedStatement ps = conn.prepareStatement(sql)) {

            ps.setInt(1, this.id_pengguna);
            ResultSet rs = ps.executeQuery();

            if (rs.next()) {
                txtNamaLengkap.setText(rs.getString("nama_lengkap"));
                txtRole.setText(rs.getString("peran"));
                txtEmail.setText(rs.getString("email"));
                txtTelepon.setText(rs.getString("telepon"));
            } else {
                JOptionPane.showMessageDialog(this, "Gagal menemukan data profil.", "Error", JOptionPane.ERROR_MESSAGE);
                this.dispose(); // Tutup form jika data tidak ditemukan
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal memuat data profil: " + e.getMessage());
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtTelepon = new javax.swing.JTextField();
        txtNamaLengkap = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtRole = new javax.swing.JLabel();
        btnSimpan = new javax.swing.JButton();
        btnBatal = new javax.swing.JButton();
        BG_EditProfile = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txtTelepon.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtTelepon.setBorder(null);
        jPanel1.add(txtTelepon, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 630, 470, 30));

        txtNamaLengkap.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtNamaLengkap.setBorder(null);
        jPanel1.add(txtNamaLengkap, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 407, 470, 30));

        txtEmail.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtEmail.setBorder(null);
        txtEmail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEmailActionPerformed(evt);
            }
        });
        jPanel1.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 557, 470, 30));

        txtRole.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jPanel1.add(txtRole, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 480, 470, 30));

        btnSimpan.setBorderPainted(false);
        btnSimpan.setContentAreaFilled(false);
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        jPanel1.add(btnSimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 720, 160, 50));

        btnBatal.setBackground(new java.awt.Color(255, 0, 51));
        btnBatal.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnBatal.setForeground(new java.awt.Color(255, 255, 255));
        btnBatal.setText("Batal");
        btnBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBatalActionPerformed(evt);
            }
        });
        jPanel1.add(btnBatal, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 720, 170, 50));

        BG_EditProfile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Edit Profile v2.png"))); // NOI18N
        jPanel1.add(BG_EditProfile, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // 1. Ambil data yang telah diubah dari form
        String namaLengkapBaru = txtNamaLengkap.getText();
        String emailBaru = txtEmail.getText();
        String teleponBaru = txtTelepon.getText();

        // 2. Validasi input
        if (namaLengkapBaru.isEmpty() || emailBaru.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nama Lengkap dan Email tidak boleh kosong.", "Validasi Gagal", JOptionPane.WARNING_MESSAGE);
            return;
        }

        // 3. Siapkan query UPDATE
        String sql = "UPDATE pengguna SET nama_lengkap=?, email=?, telepon=? WHERE id_pengguna=?";

        try (Connection conn = koneksi.getKoneksi(); PreparedStatement pstmt = conn.prepareStatement(sql)) {

            // 4. Set parameter untuk query
            pstmt.setString(1, namaLengkapBaru);
            pstmt.setString(2, emailBaru);
            pstmt.setString(3, teleponBaru);
            pstmt.setInt(4, this.id_pengguna); // Gunakan ID yang sudah disimpan

            int rowsUpdated = pstmt.executeUpdate();

            // 5. Cek apakah update berhasil
            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "Profil berhasil diperbarui!");

                // 6. PERBARUI DATA DI SESI APLIKASI SECARA LENGKAP
                UserSession session = UserSession.getInstance();
                // Asumsi UserSession.createSession telah diperbarui untuk menerima semua parameter
                // Ambil data yang tidak berubah (seperti username dan peran) dari sesi yang ada
                session.createSession(
                        session.getIdPengguna(),
                        session.getNamaPengguna(),
                        namaLengkapBaru,
                        session.getPeran(),
                        emailBaru, // Tambahkan email baru
                        teleponBaru // Tambahkan telepon baru
                );

                // 7. Tutup form edit dan buka kembali halaman Profile
                // PERBAIKAN 3: Logika navigasi kembali
                // Jika halaman sebelumnya ada, tampilkan kembali.
                new Profile(this).setVisible(true);
                this.dispose();

            } else {
                JOptionPane.showMessageDialog(this, "Gagal menyimpan profil. Tidak ada data yang berubah.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Terjadi kesalahan database: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnSimpanActionPerformed

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEmailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailActionPerformed

    private void btnBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBatalActionPerformed
        // TODO add your handling code here:
        new Profile(this).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBatalActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BG_EditProfile;
    private javax.swing.JButton btnBatal;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtNamaLengkap;
    private javax.swing.JLabel txtRole;
    private javax.swing.JTextField txtTelepon;
    // End of variables declaration//GEN-END:variables
}
