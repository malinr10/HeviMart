/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ManajemenInventori;

import util.koneksi;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class ProductSearchDialog extends javax.swing.JDialog {

    private DefaultTableModel modelTabel;
    // Variabel untuk menyimpan hasil pilihan
    public int selectedProductId = 0;
    public String selectedProductName = "";
    public BigDecimal selectedProductPrice = BigDecimal.ZERO;
    public String selectedProductBarcode = null;

    /**
     * Creates new form ProductSearchDialog
     */
    public ProductSearchDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        this.setLocationRelativeTo(parent);

        this.setLocationRelativeTo(parent);
        this.setTitle("Cari Produk");

        // --- SETUP AWAL ---
        // Setup Tabel
        modelTabel = new DefaultTableModel();
        tblProduk.setModel(modelTabel);
        modelTabel.setColumnIdentifiers(new Object[]{"ID", "Nama Produk", "Kode Barcode", "Harga Beli", "Stok"});

        // Memuat data awal dan listener
        loadCategoriesComboBox();
        loadProducts();

        // Listener untuk pencarian real-time saat pengguna mengetik
        txtSearch.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                loadProducts();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                loadProducts();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                loadProducts();
            }
        });

        // Listener untuk filter real-time saat kategori diubah
        cmbCategory.addActionListener(e -> loadProducts());
    }

    private void loadCategoriesComboBox() {
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        model.addElement("Semua Kategori");
        try (Connection conn = koneksi.getKoneksi(); Statement stmt = conn.createStatement(); ResultSet rs = stmt.executeQuery("SELECT nama_kategori FROM KATEGORI ORDER BY nama_kategori")) {
            while (rs.next()) {
                model.addElement(rs.getString("nama_kategori"));
            }
            cmbCategory.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal memuat kategori: " + e.getMessage());
            e.printStackTrace();
        }
    }

    /**
     * Method inti untuk memuat data produk dengan filter dinamis. Tidak lagi
     * menerima parameter, karena semua nilai diambil dari komponen GUI.
     */
    private void loadProducts() {
        modelTabel.setRowCount(0);
        String keyword = txtSearch.getText();
        String kategori = (String) cmbCategory.getSelectedItem();

        try {
            Connection conn = koneksi.getKoneksi();
            StringBuilder sql = new StringBuilder(
                    "SELECT p.id_produk, p.nama_produk, p.kode_barcode, p.harga_beli, p.jumlah_stok "
                    + "FROM PRODUK p LEFT JOIN KATEGORI k ON p.id_kategori = k.id_kategori "
                    + "WHERE (p.nama_produk LIKE ? OR p.kode_barcode LIKE ?) "
            );

            if (kategori != null && !"Semua Kategori".equals(kategori)) {
                sql.append("AND k.nama_kategori = ? ");
            }

            PreparedStatement pstmt = conn.prepareStatement(sql.toString());
            pstmt.setString(1, "%" + keyword + "%");
            pstmt.setString(2, "%" + keyword + "%");
            if (kategori != null && !"Semua Kategori".equals(kategori)) {
                pstmt.setString(3, kategori);
            }

            ResultSet rs = pstmt.executeQuery();
            while (rs.next()) {
                modelTabel.addRow(new Object[]{
                    rs.getInt("id_produk"),
                    rs.getString("nama_produk"),
                    rs.getString("kode_barcode"),
                    rs.getBigDecimal("harga_beli"),
                    rs.getInt("jumlah_stok")
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal memuat produk: " + e.getMessage());
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tblProduk2 = new javax.swing.JScrollPane();
        tblProduk = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnPilih = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cmbCategory = new javax.swing.JComboBox<>();
        btnReset = new javax.swing.JButton();
        BG_ProductSearch = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblProduk.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblProduk2.setViewportView(tblProduk);

        jPanel1.add(tblProduk2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 297, 740, 380));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 40, 140, 30));

        txtSearch.setBorder(null);
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });
        jPanel1.add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 172, 250, 20));

        btnPilih.setBorderPainted(false);
        btnPilih.setContentAreaFilled(false);
        btnPilih.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPilihActionPerformed(evt);
            }
        });
        jPanel1.add(btnPilih, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 170, 140, 30));

        jLabel2.setFont(new java.awt.Font("Arial", 0, 24)); // NOI18N
        jLabel2.setText("Kategori");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 250, -1, -1));

        cmbCategory.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Makanan", "Minuman", "Perabotan" }));
        cmbCategory.setBorder(null);
        cmbCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCategoryActionPerformed(evt);
            }
        });
        jPanel1.add(cmbCategory, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 250, 390, 30));

        btnReset.setBorderPainted(false);
        btnReset.setContentAreaFilled(false);
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });
        jPanel1.add(btnReset, new org.netbeans.lib.awtextra.AbsoluteConstraints(693, 162, 140, 40));

        BG_ProductSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/SearcgProductForm.png"))); // NOI18N
        jPanel1.add(BG_ProductSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPilihActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPilihActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblProduk.getSelectedRow();

        // 2. Pastikan ada baris yang dipilih (tidak -1)
        if (selectedRow != -1) {
            // 3. Ambil semua data yang kita butuhkan dari baris tersebut
            this.selectedProductId = (int) tblProduk.getValueAt(selectedRow, 0);
            this.selectedProductName = (String) tblProduk.getValueAt(selectedRow, 1);
            this.selectedProductBarcode = (String) tblProduk.getValueAt(selectedRow, 2);
            this.selectedProductPrice = (BigDecimal) tblProduk.getValueAt(selectedRow, 3);

            // 4. Tutup dialog ini. Eksekusi akan kembali ke POSForm.
            this.dispose();
        } else {
            // Beri peringatan jika tidak ada baris yang dipilih
            JOptionPane.showMessageDialog(this, "Pilih salah satu produk dari tabel terlebih dahulu.", "Belum Ada Pilihan", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnPilihActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        txtSearch.setText("");
        cmbCategory.setSelectedIndex(0);
        loadProducts();
    }//GEN-LAST:event_btnResetActionPerformed

    private void cmbCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCategoryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductSearchDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductSearchDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductSearchDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductSearchDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ProductSearchDialog dialog = new ProductSearchDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BG_ProductSearch;
    private javax.swing.JButton btnPilih;
    private javax.swing.JButton btnReset;
    private javax.swing.JComboBox<String> cmbCategory;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTable tblProduk;
    private javax.swing.JScrollPane tblProduk2;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
