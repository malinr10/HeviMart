/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package ManajemenProduk;

import util.koneksi;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lenovo
 */
public class CategoryManagementDialog extends javax.swing.JDialog {

    private DefaultTableModel modelTabel;
    private int selectedCategoryId = 0;

    /**
     * Creates new form CategoryManagementDialog
     */
    public CategoryManagementDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        this.setLocationRelativeTo(parent);
        this.setTitle("Manajemen Kategori Produk");

        modelTabel = (DefaultTableModel) tblKategori.getModel();
        modelTabel.setColumnIdentifiers(new Object[]{"ID", "Nama Kategori", "Deskripsi"});

        tblKategori.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tblKategori.getSelectionModel().addListSelectionListener((ListSelectionEvent event) -> {
            if (!event.getValueIsAdjusting() && tblKategori.getSelectedRow() != -1) {
                int row = tblKategori.getSelectedRow();
                selectedCategoryId = (int) modelTabel.getValueAt(row, 0);
                txtNamaKategori.setText((String) modelTabel.getValueAt(row, 1));
                txtDeskripsi.setText((String) modelTabel.getValueAt(row, 2));
                btnSimpan.setText("Update");
                btnHapus.setEnabled(true);
            }
        });

        loadCategories();
        clearForm();
    }
    
    private void clearForm() {
        selectedCategoryId = 0;
        txtNamaKategori.setText("");
        txtDeskripsi.setText("");
        tblKategori.clearSelection();
        btnSimpan.setText("Simpan Baru");
        btnHapus.setEnabled(false);
        txtNamaKategori.requestFocus();
    }

    private void loadCategories() {
        modelTabel.setRowCount(0);
        String sql = "SELECT id_kategori, nama_kategori, deskripsi FROM KATEGORI ORDER BY nama_kategori";
        try (Connection conn = koneksi.getKoneksi();
             PreparedStatement pstmt = conn.prepareStatement(sql);
             ResultSet rs = pstmt.executeQuery()) {
            while (rs.next()) {
                modelTabel.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getString(3)});
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal memuat data kategori: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNamaKategori = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDeskripsi = new javax.swing.JTextArea();
        btnSimpan = new javax.swing.JButton();
        btnBaru = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblKategori = new javax.swing.JTable();
        btnHapus = new javax.swing.JButton();
        BG_KelolaKategori = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setPreferredSize(new java.awt.Dimension(896, 746));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 190, -1, -1));

        txtNamaKategori.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        txtNamaKategori.setBorder(null);
        jPanel1.add(txtNamaKategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 180, 320, 30));
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 250, -1, -1));

        jScrollPane1.setBorder(null);
        jScrollPane1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N

        txtDeskripsi.setColumns(20);
        txtDeskripsi.setRows(5);
        jScrollPane1.setViewportView(txtDeskripsi);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 250, 330, 80));

        btnSimpan.setBorderPainted(false);
        btnSimpan.setContentAreaFilled(false);
        btnSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSimpanActionPerformed(evt);
            }
        });
        jPanel1.add(btnSimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 390, 160, 30));

        btnBaru.setBorderPainted(false);
        btnBaru.setContentAreaFilled(false);
        btnBaru.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaruActionPerformed(evt);
            }
        });
        jPanel1.add(btnBaru, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 390, 160, 30));

        tblKategori.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblKategori);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 460, -1, 160));

        btnHapus.setBorderPainted(false);
        btnHapus.setContentAreaFilled(false);
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });
        jPanel1.add(btnHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 650, 230, 40));

        BG_KelolaKategori.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Image/Kelola Kategori.png"))); // NOI18N
        jPanel1.add(BG_KelolaKategori, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -4, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSimpanActionPerformed
        // TODO add your handling code here:
        String nama = txtNamaKategori.getText().trim();
        String deskripsi = txtDeskripsi.getText().trim();

        if (nama.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nama Kategori tidak boleh kosong.");
            return;
        }

        try (Connection conn = koneksi.getKoneksi()) {
            PreparedStatement pstmt;
            if (selectedCategoryId == 0) { // Mode Tambah
                pstmt = conn.prepareStatement("INSERT INTO KATEGORI (nama_kategori, deskripsi) VALUES (?, ?)");
            } else { // Mode Edit
                pstmt = conn.prepareStatement("UPDATE KATEGORI SET nama_kategori=?, deskripsi=? WHERE id_kategori=?");
                pstmt.setInt(3, selectedCategoryId);
            }
            pstmt.setString(1, nama);
            pstmt.setString(2, deskripsi);
            pstmt.executeUpdate();

            JOptionPane.showMessageDialog(this, "Kategori berhasil disimpan!");
            loadCategories();
            clearForm();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Gagal menyimpan kategori: " + e.getMessage());
        }
    }//GEN-LAST:event_btnSimpanActionPerformed

    private void btnBaruActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaruActionPerformed
        // TODO add your handling code here:
        clearForm();
    }//GEN-LAST:event_btnBaruActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        if (selectedCategoryId == 0) return;
        if (JOptionPane.showConfirmDialog(this, "Yakin ingin menghapus kategori ini? Produk dalam kategori ini tidak akan terhapus.", "Konfirmasi", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            try (Connection conn = koneksi.getKoneksi();
                 PreparedStatement pstmt = conn.prepareStatement("DELETE FROM KATEGORI WHERE id_kategori = ?")) {
                pstmt.setInt(1, selectedCategoryId);
                pstmt.executeUpdate();
                JOptionPane.showMessageDialog(this, "Kategori berhasil dihapus.");
                loadCategories();
                clearForm();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Gagal menghapus kategori: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_btnHapusActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CategoryManagementDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CategoryManagementDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CategoryManagementDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CategoryManagementDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CategoryManagementDialog dialog = new CategoryManagementDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BG_KelolaKategori;
    private javax.swing.JButton btnBaru;
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnSimpan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblKategori;
    private javax.swing.JTextArea txtDeskripsi;
    private javax.swing.JTextField txtNamaKategori;
    // End of variables declaration//GEN-END:variables
}
